{
  "type": "File",
  "start": 0,
  "end": 8302,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 312,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 8302,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 312,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ImportDeclaration",
        "start": 0,
        "end": 31,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 1,
            "column": 31
          }
        },
        "specifiers": [
          {
            "type": "ImportNamespaceSpecifier",
            "start": 7,
            "end": 17,
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 17
              }
            },
            "local": {
              "type": "Identifier",
              "start": 12,
              "end": 17,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 12
                },
                "end": {
                  "line": 1,
                  "column": 17
                },
                "identifierName": "THREE"
              },
              "name": "THREE"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 23,
          "end": 30,
          "loc": {
            "start": {
              "line": 1,
              "column": 23
            },
            "end": {
              "line": 1,
              "column": 30
            }
          },
          "extra": {
            "rawValue": "three",
            "raw": "'three'"
          },
          "value": "three"
        }
      },
      {
        "type": "ImportDeclaration",
        "start": 33,
        "end": 74,
        "loc": {
          "start": {
            "line": 3,
            "column": 0
          },
          "end": {
            "line": 3,
            "column": 41
          }
        },
        "specifiers": [
          {
            "type": "ImportSpecifier",
            "start": 42,
            "end": 56,
            "loc": {
              "start": {
                "line": 3,
                "column": 9
              },
              "end": {
                "line": 3,
                "column": 23
              }
            },
            "imported": {
              "type": "Identifier",
              "start": 42,
              "end": 56,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 23
                },
                "identifierName": "getScaleFactor"
              },
              "name": "getScaleFactor"
            },
            "local": {
              "type": "Identifier",
              "start": 42,
              "end": 56,
              "loc": {
                "start": {
                  "line": 3,
                  "column": 9
                },
                "end": {
                  "line": 3,
                  "column": 23
                },
                "identifierName": "getScaleFactor"
              },
              "name": "getScaleFactor"
            }
          }
        ],
        "source": {
          "type": "StringLiteral",
          "start": 64,
          "end": 73,
          "loc": {
            "start": {
              "line": 3,
              "column": 31
            },
            "end": {
              "line": 3,
              "column": 40
            }
          },
          "extra": {
            "rawValue": "./Scale",
            "raw": "'./Scale'"
          },
          "value": "./Scale"
        },
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 76,
            "end": 94,
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 95,
        "end": 312,
        "loc": {
          "start": {
            "line": 8,
            "column": 0
          },
          "end": {
            "line": 17,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 102,
          "end": 312,
          "loc": {
            "start": {
              "line": 8,
              "column": 7
            },
            "end": {
              "line": 17,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 111,
            "end": 133,
            "loc": {
              "start": {
                "line": 8,
                "column": 16
              },
              "end": {
                "line": 8,
                "column": 38
              },
              "identifierName": "getOrbitShaderFragment"
            },
            "name": "getOrbitShaderFragment",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 136,
            "end": 312,
            "loc": {
              "start": {
                "line": 8,
                "column": 41
              },
              "end": {
                "line": 17,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 140,
                "end": 310,
                "loc": {
                  "start": {
                    "line": 9,
                    "column": 2
                  },
                  "end": {
                    "line": 16,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "TemplateLiteral",
                  "start": 147,
                  "end": 309,
                  "loc": {
                    "start": {
                      "line": 9,
                      "column": 9
                    },
                    "end": {
                      "line": 16,
                      "column": 3
                    }
                  },
                  "expressions": [],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 148,
                      "end": 308,
                      "loc": {
                        "start": {
                          "line": 9,
                          "column": 10
                        },
                        "end": {
                          "line": 16,
                          "column": 2
                        }
                      },
                      "value": {
                        "raw": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  ",
                        "cooked": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  "
                      },
                      "tail": true
                    }
                  ]
                }
              }
            ],
            "directives": [],
            "trailingComments": null
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 76,
              "end": 94,
              "loc": {
                "start": {
                  "line": 5,
                  "column": 0
                },
                "end": {
                  "line": 7,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 314,
              "end": 332,
              "loc": {
                "start": {
                  "line": 19,
                  "column": 0
                },
                "end": {
                  "line": 21,
                  "column": 3
                }
              }
            }
          ]
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 76,
            "end": 94,
            "loc": {
              "start": {
                "line": 5,
                "column": 0
              },
              "end": {
                "line": 7,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 314,
            "end": 332,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 333,
        "end": 2932,
        "loc": {
          "start": {
            "line": 22,
            "column": 0
          },
          "end": {
            "line": 115,
            "column": 1
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "FunctionDeclaration",
          "start": 340,
          "end": 2932,
          "loc": {
            "start": {
              "line": 22,
              "column": 7
            },
            "end": {
              "line": 115,
              "column": 1
            }
          },
          "id": {
            "type": "Identifier",
            "start": 349,
            "end": 369,
            "loc": {
              "start": {
                "line": 22,
                "column": 16
              },
              "end": {
                "line": 22,
                "column": 36
              },
              "identifierName": "getOrbitShaderVertex"
            },
            "name": "getOrbitShaderVertex",
            "leadingComments": null
          },
          "generator": false,
          "expression": false,
          "async": false,
          "params": [],
          "body": {
            "type": "BlockStatement",
            "start": 372,
            "end": 2932,
            "loc": {
              "start": {
                "line": 22,
                "column": 39
              },
              "end": {
                "line": 115,
                "column": 1
              }
            },
            "body": [
              {
                "type": "ReturnStatement",
                "start": 376,
                "end": 2930,
                "loc": {
                  "start": {
                    "line": 23,
                    "column": 2
                  },
                  "end": {
                    "line": 114,
                    "column": 4
                  }
                },
                "argument": {
                  "type": "TemplateLiteral",
                  "start": 383,
                  "end": 2929,
                  "loc": {
                    "start": {
                      "line": 23,
                      "column": 9
                    },
                    "end": {
                      "line": 114,
                      "column": 3
                    }
                  },
                  "expressions": [
                    {
                      "type": "CallExpression",
                      "start": 1426,
                      "end": 1470,
                      "loc": {
                        "start": {
                          "line": 68,
                          "column": 18
                        },
                        "end": {
                          "line": 70,
                          "column": 7
                        }
                      },
                      "callee": {
                        "type": "MemberExpression",
                        "start": 1426,
                        "end": 1450,
                        "loc": {
                          "start": {
                            "line": 68,
                            "column": 18
                          },
                          "end": {
                            "line": 68,
                            "column": 42
                          }
                        },
                        "object": {
                          "type": "CallExpression",
                          "start": 1426,
                          "end": 1442,
                          "loc": {
                            "start": {
                              "line": 68,
                              "column": 18
                            },
                            "end": {
                              "line": 68,
                              "column": 34
                            }
                          },
                          "callee": {
                            "type": "Identifier",
                            "start": 1426,
                            "end": 1440,
                            "loc": {
                              "start": {
                                "line": 68,
                                "column": 18
                              },
                              "end": {
                                "line": 68,
                                "column": 32
                              },
                              "identifierName": "getScaleFactor"
                            },
                            "name": "getScaleFactor"
                          },
                          "arguments": []
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 1443,
                          "end": 1450,
                          "loc": {
                            "start": {
                              "line": 68,
                              "column": 35
                            },
                            "end": {
                              "line": 68,
                              "column": 42
                            },
                            "identifierName": "toFixed"
                          },
                          "name": "toFixed"
                        },
                        "computed": false
                      },
                      "arguments": [
                        {
                          "type": "NumericLiteral",
                          "start": 1460,
                          "end": 1461,
                          "loc": {
                            "start": {
                              "line": 69,
                              "column": 8
                            },
                            "end": {
                              "line": 69,
                              "column": 9
                            }
                          },
                          "extra": {
                            "rawValue": 1,
                            "raw": "1"
                          },
                          "value": 1
                        }
                      ]
                    }
                  ],
                  "quasis": [
                    {
                      "type": "TemplateElement",
                      "start": 384,
                      "end": 1424,
                      "loc": {
                        "start": {
                          "line": 23,
                          "column": 10
                        },
                        "end": {
                          "line": 68,
                          "column": 16
                        }
                      },
                      "value": {
                        "raw": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float w;\n    attribute float wBar;\n    attribute float M;\n\n    vec3 getAstroPos() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      float adjusted_e = e;\n      if (e >= 1.0) {\n        adjusted_e = 0.9;\n      }\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + adjusted_e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n\n      for ( int i = 0; i < 100; i ++ ) {\n        E1 = M + adjusted_e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+adjusted_e)/(1.0-adjusted_e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = ",
                        "cooked": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float w;\n    attribute float wBar;\n    attribute float M;\n\n    vec3 getAstroPos() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      float adjusted_e = e;\n      if (e >= 1.0) {\n        adjusted_e = 0.9;\n      }\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + adjusted_e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n\n      for ( int i = 0; i < 100; i ++ ) {\n        E1 = M + adjusted_e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+adjusted_e)/(1.0-adjusted_e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = "
                      },
                      "tail": false
                    },
                    {
                      "type": "TemplateElement",
                      "start": 1471,
                      "end": 2928,
                      "loc": {
                        "start": {
                          "line": 70,
                          "column": 8
                        },
                        "end": {
                          "line": 114,
                          "column": 2
                        }
                      },
                      "value": {
                        "raw": " * a * (1.0 - adjusted_e*adjusted_e) / (1.0 + adjusted_e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    /*\n    vec3 getAstroPosFast() {\n      float M1 = ma + (jd - epoch) * n;\n      float theta = M1 + 2. * e * sin(M1);\n\n      float cosT = cos(theta);\n\n      float r = a * (1. - e * e) / (1. + e * cosT);\n      float v0 = r * cosT;\n      float v1 = r * sin(theta);\n\n      float sinOm = sin(om);\n      float cosOm = cos(om);\n      float sinW = sin(w);\n      float cosW = cos(w);\n      float sinI = sin(i);\n      float cosI = cos(i);\n\n      float X = v0 * (cosOm * cosW - sinOm * sinW * cosI) + v1 * (-1. * cosOm * sinW - sinOm * cosW * cosI);\n      float Y = v0 * (sinOm * cosW + cosOm * sinW * cosI) + v1 * (-1. * sinOm * sinW + cosOm * cosW * cosI);\n      float Z = v0 * (sinW * sinI) + v1 * (cosW * sinI);\n\n      return vec3(X, Y, Z);\n    }\n    */\n\n    void main() {\n      vColor = fuzzColor;\n\n      //vec3 newpos = getAstroPosFast() + origin;\n      vec3 newpos = getAstroPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  ",
                        "cooked": " * a * (1.0 - adjusted_e*adjusted_e) / (1.0 + adjusted_e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    /*\n    vec3 getAstroPosFast() {\n      float M1 = ma + (jd - epoch) * n;\n      float theta = M1 + 2. * e * sin(M1);\n\n      float cosT = cos(theta);\n\n      float r = a * (1. - e * e) / (1. + e * cosT);\n      float v0 = r * cosT;\n      float v1 = r * sin(theta);\n\n      float sinOm = sin(om);\n      float cosOm = cos(om);\n      float sinW = sin(w);\n      float cosW = cos(w);\n      float sinI = sin(i);\n      float cosI = cos(i);\n\n      float X = v0 * (cosOm * cosW - sinOm * sinW * cosI) + v1 * (-1. * cosOm * sinW - sinOm * cosW * cosI);\n      float Y = v0 * (sinOm * cosW + cosOm * sinW * cosI) + v1 * (-1. * sinOm * sinW + cosOm * cosW * cosI);\n      float Z = v0 * (sinW * sinI) + v1 * (cosW * sinI);\n\n      return vec3(X, Y, Z);\n    }\n    */\n\n    void main() {\n      vColor = fuzzColor;\n\n      //vec3 newpos = getAstroPosFast() + origin;\n      vec3 newpos = getAstroPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  "
                      },
                      "tail": true
                    }
                  ]
                }
              }
            ],
            "directives": []
          },
          "leadingComments": [
            {
              "type": "CommentBlock",
              "value": "*\n * @ignore\n ",
              "start": 314,
              "end": 332,
              "loc": {
                "start": {
                  "line": 19,
                  "column": 0
                },
                "end": {
                  "line": 21,
                  "column": 3
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentBlock",
            "value": "*\n * @ignore\n ",
            "start": 314,
            "end": 332,
            "loc": {
              "start": {
                "line": 19,
                "column": 0
              },
              "end": {
                "line": 21,
                "column": 3
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 2934,
        "end": 3130,
        "loc": {
          "start": {
            "line": 117,
            "column": 0
          },
          "end": {
            "line": 124,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 2941,
          "end": 3130,
          "loc": {
            "start": {
              "line": 117,
              "column": 7
            },
            "end": {
              "line": 124,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 2947,
              "end": 3129,
              "loc": {
                "start": {
                  "line": 117,
                  "column": 13
                },
                "end": {
                  "line": 124,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 2947,
                "end": 2967,
                "loc": {
                  "start": {
                    "line": 117,
                    "column": 13
                  },
                  "end": {
                    "line": 117,
                    "column": 33
                  },
                  "identifierName": "STAR_SHADER_FRAGMENT"
                },
                "name": "STAR_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 2970,
                "end": 3129,
                "loc": {
                  "start": {
                    "line": 117,
                    "column": 36
                  },
                  "end": {
                    "line": 124,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 2971,
                    "end": 3128,
                    "loc": {
                      "start": {
                        "line": 117,
                        "column": 37
                      },
                      "end": {
                        "line": 124,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n",
                      "cooked": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3132,
        "end": 3417,
        "loc": {
          "start": {
            "line": 126,
            "column": 0
          },
          "end": {
            "line": 136,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3139,
          "end": 3417,
          "loc": {
            "start": {
              "line": 126,
              "column": 7
            },
            "end": {
              "line": 136,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3145,
              "end": 3416,
              "loc": {
                "start": {
                  "line": 126,
                  "column": 13
                },
                "end": {
                  "line": 136,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3145,
                "end": 3163,
                "loc": {
                  "start": {
                    "line": 126,
                    "column": 13
                  },
                  "end": {
                    "line": 126,
                    "column": 31
                  },
                  "identifierName": "STAR_SHADER_VERTEX"
                },
                "name": "STAR_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 3166,
                "end": 3416,
                "loc": {
                  "start": {
                    "line": 126,
                    "column": 34
                  },
                  "end": {
                    "line": 136,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 3167,
                    "end": 3415,
                    "loc": {
                      "start": {
                        "line": 126,
                        "column": 35
                      },
                      "end": {
                        "line": 136,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n",
                      "cooked": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3419,
        "end": 3771,
        "loc": {
          "start": {
            "line": 138,
            "column": 0
          },
          "end": {
            "line": 148,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3426,
          "end": 3771,
          "loc": {
            "start": {
              "line": 138,
              "column": 7
            },
            "end": {
              "line": 148,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3432,
              "end": 3770,
              "loc": {
                "start": {
                  "line": 138,
                  "column": 13
                },
                "end": {
                  "line": 148,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3432,
                "end": 3462,
                "loc": {
                  "start": {
                    "line": 138,
                    "column": 13
                  },
                  "end": {
                    "line": 138,
                    "column": 43
                  },
                  "identifierName": "GENERIC_PARTICLE_SHADER_VERTEX"
                },
                "name": "GENERIC_PARTICLE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 3465,
                "end": 3770,
                "loc": {
                  "start": {
                    "line": 138,
                    "column": 46
                  },
                  "end": {
                    "line": 148,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 3466,
                    "end": 3769,
                    "loc": {
                      "start": {
                        "line": 138,
                        "column": 47
                      },
                      "end": {
                        "line": 148,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n",
                      "cooked": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 3773,
        "end": 4095,
        "loc": {
          "start": {
            "line": 150,
            "column": 0
          },
          "end": {
            "line": 159,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 3780,
          "end": 4095,
          "loc": {
            "start": {
              "line": 150,
              "column": 7
            },
            "end": {
              "line": 159,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 3786,
              "end": 4094,
              "loc": {
                "start": {
                  "line": 150,
                  "column": 13
                },
                "end": {
                  "line": 159,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 3786,
                "end": 3818,
                "loc": {
                  "start": {
                    "line": 150,
                    "column": 13
                  },
                  "end": {
                    "line": 150,
                    "column": 45
                  },
                  "identifierName": "GENERIC_PARTICLE_SHADER_FRAGMENT"
                },
                "name": "GENERIC_PARTICLE_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 3821,
                "end": 4094,
                "loc": {
                  "start": {
                    "line": 150,
                    "column": 48
                  },
                  "end": {
                    "line": 159,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 3822,
                    "end": 4093,
                    "loc": {
                      "start": {
                        "line": 150,
                        "column": 49
                      },
                      "end": {
                        "line": 159,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n",
                      "cooked": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 4097,
        "end": 4937,
        "loc": {
          "start": {
            "line": 161,
            "column": 0
          },
          "end": {
            "line": 186,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 4104,
          "end": 4937,
          "loc": {
            "start": {
              "line": 161,
              "column": 7
            },
            "end": {
              "line": 186,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 4110,
              "end": 4936,
              "loc": {
                "start": {
                  "line": 161,
                  "column": 13
                },
                "end": {
                  "line": 186,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 4110,
                "end": 4134,
                "loc": {
                  "start": {
                    "line": 161,
                    "column": 13
                  },
                  "end": {
                    "line": 161,
                    "column": 37
                  },
                  "identifierName": "ATMOSPHERE_SHADER_VERTEX"
                },
                "name": "ATMOSPHERE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 4137,
                "end": 4936,
                "loc": {
                  "start": {
                    "line": 161,
                    "column": 40
                  },
                  "end": {
                    "line": 186,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 4138,
                    "end": 4935,
                    "loc": {
                      "start": {
                        "line": 161,
                        "column": 41
                      },
                      "end": {
                        "line": 186,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  //varying vec3 vNormal;\n\n  varying vec3 vViewLightPos;\n\n  void main() {\n    //vNormal = normalize(normalMatrix * normal);\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    vUv = uv;\n    // Since the light is in camera coordinates,\n    // I'll need the vertex position in camera coords too\n    vecPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    // That's NOT exacly how you should transform your\n    // normals but this will work fine, since my model\n    // matrix is pretty basic\n    vecNormal = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    gl_Position = projectionMatrix * vec4(vecPos, 1.0);\n  }\n",
                      "cooked": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  //varying vec3 vNormal;\n\n  varying vec3 vViewLightPos;\n\n  void main() {\n    //vNormal = normalize(normalMatrix * normal);\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    vUv = uv;\n    // Since the light is in camera coordinates,\n    // I'll need the vertex position in camera coords too\n    vecPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    // That's NOT exacly how you should transform your\n    // normals but this will work fine, since my model\n    // matrix is pretty basic\n    vecNormal = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    gl_Position = projectionMatrix * vec4(vecPos, 1.0);\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "trailingComments": [
            {
              "type": "CommentLine",
              "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
              "start": 4939,
              "end": 5058,
              "loc": {
                "start": {
                  "line": 188,
                  "column": 0
                },
                "end": {
                  "line": 188,
                  "column": 119
                }
              }
            }
          ],
          "leadingComments": []
        },
        "trailingComments": [
          {
            "type": "CommentLine",
            "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
            "start": 4939,
            "end": 5058,
            "loc": {
              "start": {
                "line": 188,
                "column": 0
              },
              "end": {
                "line": 188,
                "column": 119
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5059,
        "end": 5700,
        "loc": {
          "start": {
            "line": 189,
            "column": 0
          },
          "end": {
            "line": 210,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5066,
          "end": 5700,
          "loc": {
            "start": {
              "line": 189,
              "column": 7
            },
            "end": {
              "line": 210,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5072,
              "end": 5699,
              "loc": {
                "start": {
                  "line": 189,
                  "column": 13
                },
                "end": {
                  "line": 210,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5072,
                "end": 5098,
                "loc": {
                  "start": {
                    "line": 189,
                    "column": 13
                  },
                  "end": {
                    "line": 189,
                    "column": 39
                  },
                  "identifierName": "ATMOSPHERE_SHADER_FRAGMENT"
                },
                "name": "ATMOSPHERE_SHADER_FRAGMENT",
                "leadingComments": null
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 5101,
                "end": 5699,
                "loc": {
                  "start": {
                    "line": 189,
                    "column": 42
                  },
                  "end": {
                    "line": 210,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 5102,
                    "end": 5698,
                    "loc": {
                      "start": {
                        "line": 189,
                        "column": 43
                      },
                      "end": {
                        "line": 210,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform float c;\n  uniform float p;\n  uniform vec3 color;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  varying vec3  vViewLightPos;\n\n  void main() {\n    float intensity = pow(c - dot(vecNormal, vec3(0.0, 0.0, 1.0)), p);\n\n    vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 lightDirection = normalize(vecPos - vViewLightPos);\n    addedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0)\n                       * 1.0 /* intensity */;\n                       // * pointLights[i].color\n\n    gl_FragColor = vec4(color, 1.0) * intensity * addedLights;\n  }\n",
                      "cooked": "\n  uniform float c;\n  uniform float p;\n  uniform vec3 color;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  varying vec3  vViewLightPos;\n\n  void main() {\n    float intensity = pow(c - dot(vecNormal, vec3(0.0, 0.0, 1.0)), p);\n\n    vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 lightDirection = normalize(vecPos - vViewLightPos);\n    addedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0)\n                       * 1.0 /* intensity */;\n                       // * pointLights[i].color\n\n    gl_FragColor = vec4(color, 1.0) * intensity * addedLights;\n  }\n"
                    },
                    "tail": true
                  }
                ]
              },
              "leadingComments": null
            }
          ],
          "kind": "const",
          "leadingComments": [
            {
              "type": "CommentLine",
              "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
              "start": 4939,
              "end": 5058,
              "loc": {
                "start": {
                  "line": 188,
                  "column": 0
                },
                "end": {
                  "line": 188,
                  "column": 119
                }
              }
            }
          ],
          "trailingComments": []
        },
        "leadingComments": [
          {
            "type": "CommentLine",
            "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
            "start": 4939,
            "end": 5058,
            "loc": {
              "start": {
                "line": 188,
                "column": 0
              },
              "end": {
                "line": 188,
                "column": 119
              }
            }
          }
        ]
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 5702,
        "end": 6163,
        "loc": {
          "start": {
            "line": 212,
            "column": 0
          },
          "end": {
            "line": 229,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 5709,
          "end": 6163,
          "loc": {
            "start": {
              "line": 212,
              "column": 7
            },
            "end": {
              "line": 229,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 5715,
              "end": 6162,
              "loc": {
                "start": {
                  "line": 212,
                  "column": 13
                },
                "end": {
                  "line": 229,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 5715,
                "end": 5735,
                "loc": {
                  "start": {
                    "line": 212,
                    "column": 13
                  },
                  "end": {
                    "line": 212,
                    "column": 33
                  },
                  "identifierName": "SPHERE_SHADER_VERTEX"
                },
                "name": "SPHERE_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 5738,
                "end": 6162,
                "loc": {
                  "start": {
                    "line": 212,
                    "column": 36
                  },
                  "end": {
                    "line": 229,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 5739,
                    "end": 6161,
                    "loc": {
                      "start": {
                        "line": 212,
                        "column": 37
                      },
                      "end": {
                        "line": 229,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n  varying vec3 vNormal;\n\n  void main() {\n    vUv = uv;\n    vec4 vViewPosition4 = modelViewMatrix * vec4(position, 1.0);\n    vViewPosition = vViewPosition4.xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * vViewPosition4;\n  }\n",
                      "cooked": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n  varying vec3 vNormal;\n\n  void main() {\n    vUv = uv;\n    vec4 vViewPosition4 = modelViewMatrix * vec4(position, 1.0);\n    vViewPosition = vViewPosition4.xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * vViewPosition4;\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6165,
        "end": 6610,
        "loc": {
          "start": {
            "line": 231,
            "column": 0
          },
          "end": {
            "line": 245,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 6172,
          "end": 6610,
          "loc": {
            "start": {
              "line": 231,
              "column": 7
            },
            "end": {
              "line": 245,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 6178,
              "end": 6609,
              "loc": {
                "start": {
                  "line": 231,
                  "column": 13
                },
                "end": {
                  "line": 245,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 6178,
                "end": 6200,
                "loc": {
                  "start": {
                    "line": 231,
                    "column": 13
                  },
                  "end": {
                    "line": 231,
                    "column": 35
                  },
                  "identifierName": "SPHERE_SHADER_FRAGMENT"
                },
                "name": "SPHERE_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 6203,
                "end": 6609,
                "loc": {
                  "start": {
                    "line": 231,
                    "column": 38
                  },
                  "end": {
                    "line": 245,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 6204,
                    "end": 6608,
                    "loc": {
                      "start": {
                        "line": 231,
                        "column": 39
                      },
                      "end": {
                        "line": 245,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform sampler2D sphereTexture;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n\n  void main() {\n    vec3 normal = normalize(vNormal);\n    vec3 lightDir = normalize(vViewLightPos - vViewPosition);\n    float lambertian = max(dot(normal, lightDir), 0.0);\n    gl_FragColor = texture2D(sphereTexture, vUv) * vec4(vec3(1.0) * lambertian, 1.0);\n  }\n",
                      "cooked": "\n  uniform sampler2D sphereTexture;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n\n  void main() {\n    vec3 normal = normalize(vNormal);\n    vec3 lightDir = normalize(vViewLightPos - vViewPosition);\n    float lambertian = max(dot(normal, lightDir), 0.0);\n    gl_FragColor = texture2D(sphereTexture, vUv) * vec4(vec3(1.0) * lambertian, 1.0);\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6612,
        "end": 6986,
        "loc": {
          "start": {
            "line": 247,
            "column": 0
          },
          "end": {
            "line": 260,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 6619,
          "end": 6986,
          "loc": {
            "start": {
              "line": 247,
              "column": 7
            },
            "end": {
              "line": 260,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 6625,
              "end": 6985,
              "loc": {
                "start": {
                  "line": 247,
                  "column": 13
                },
                "end": {
                  "line": 260,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 6625,
                "end": 6643,
                "loc": {
                  "start": {
                    "line": 247,
                    "column": 13
                  },
                  "end": {
                    "line": 247,
                    "column": 31
                  },
                  "identifierName": "RING_SHADER_VERTEX"
                },
                "name": "RING_SHADER_VERTEX"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 6646,
                "end": 6985,
                "loc": {
                  "start": {
                    "line": 247,
                    "column": 34
                  },
                  "end": {
                    "line": 260,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 6647,
                    "end": 6984,
                    "loc": {
                      "start": {
                        "line": 247,
                        "column": 35
                      },
                      "end": {
                        "line": 260,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n\n  void main() {\n    vPos = position;\n    vec4 worldPosition = (modelMatrix * vec4(position, 1.));\n    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition.xyz, 1.);\n\n    vNormal = normalMatrix * normal;\n    vWorldPosition = worldPosition.xyz;\n  }\n",
                      "cooked": "\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n\n  void main() {\n    vPos = position;\n    vec4 worldPosition = (modelMatrix * vec4(position, 1.));\n    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition.xyz, 1.);\n\n    vNormal = normalMatrix * normal;\n    vWorldPosition = worldPosition.xyz;\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      },
      {
        "type": "ExportNamedDeclaration",
        "start": 6988,
        "end": 8301,
        "loc": {
          "start": {
            "line": 262,
            "column": 0
          },
          "end": {
            "line": 311,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 6995,
          "end": 8301,
          "loc": {
            "start": {
              "line": 262,
              "column": 7
            },
            "end": {
              "line": 311,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 7001,
              "end": 8300,
              "loc": {
                "start": {
                  "line": 262,
                  "column": 13
                },
                "end": {
                  "line": 311,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 7001,
                "end": 7021,
                "loc": {
                  "start": {
                    "line": 262,
                    "column": 13
                  },
                  "end": {
                    "line": 262,
                    "column": 33
                  },
                  "identifierName": "RING_SHADER_FRAGMENT"
                },
                "name": "RING_SHADER_FRAGMENT"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 7024,
                "end": 8300,
                "loc": {
                  "start": {
                    "line": 262,
                    "column": 36
                  },
                  "end": {
                    "line": 311,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 7025,
                    "end": 8299,
                    "loc": {
                      "start": {
                        "line": 262,
                        "column": 37
                      },
                      "end": {
                        "line": 311,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n  uniform sampler2D ringTexture;\n  uniform float innerRadius;\n  uniform float outerRadius;\n  uniform vec3 lightPos;\n\n  varying vec3 vNormal;\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n\n  vec4 color() {\n    vec2 uv = vec2(0);\n    uv.x = (length(vPos) - innerRadius) / (outerRadius - innerRadius);\n    if (uv.x < 0.0 || uv.x > 1.0) {\n      discard;\n    }\n\n    vec4 pixel = texture2D(ringTexture, uv);\n    return pixel;\n  }\n\n  vec3 shadow() {\n    // TODO(ian): planet and sun position uniforms\n    // sun position in saturn test\n\n    vec3 lightDir = normalize(vPos - lightPos);\n    vec3 planetPos = vec3(0);\n\n    vec3 ringPos = vPos - planetPos;\n    float posDotLightDir = dot(ringPos, lightDir);\n    float posDotLightDir2 = posDotLightDir * posDotLightDir;\n    float radius = 0.0389259903; // radius of saturn in coordinate system\n    float radius2 = radius * radius;\n    if (posDotLightDir > 0.0 && dot(ringPos, ringPos) - posDotLightDir2 < radius2) {\n      return vec3(0.0);\n    }\n    return vec3(1.0);\n  }\n\n  vec3 lights() {\n    vec3 lightDirection = normalize(vWorldPosition - lightPos);\n    float c = 0.35 + max(0.0, dot(vNormal, lightDirection)) * 0.4;\n\n    return vec3(c);\n  }\n\n  void main() {\n    gl_FragColor = color() * vec4(lights() * shadow(), 1.0);\n  }\n",
                      "cooked": "\n  uniform sampler2D ringTexture;\n  uniform float innerRadius;\n  uniform float outerRadius;\n  uniform vec3 lightPos;\n\n  varying vec3 vNormal;\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n\n  vec4 color() {\n    vec2 uv = vec2(0);\n    uv.x = (length(vPos) - innerRadius) / (outerRadius - innerRadius);\n    if (uv.x < 0.0 || uv.x > 1.0) {\n      discard;\n    }\n\n    vec4 pixel = texture2D(ringTexture, uv);\n    return pixel;\n  }\n\n  vec3 shadow() {\n    // TODO(ian): planet and sun position uniforms\n    // sun position in saturn test\n\n    vec3 lightDir = normalize(vPos - lightPos);\n    vec3 planetPos = vec3(0);\n\n    vec3 ringPos = vPos - planetPos;\n    float posDotLightDir = dot(ringPos, lightDir);\n    float posDotLightDir2 = posDotLightDir * posDotLightDir;\n    float radius = 0.0389259903; // radius of saturn in coordinate system\n    float radius2 = radius * radius;\n    if (posDotLightDir > 0.0 && dot(ringPos, ringPos) - posDotLightDir2 < radius2) {\n      return vec3(0.0);\n    }\n    return vec3(1.0);\n  }\n\n  vec3 lights() {\n    vec3 lightDirection = normalize(vWorldPosition - lightPos);\n    float c = 0.35 + max(0.0, dot(vNormal, lightDirection)) * 0.4;\n\n    return vec3(c);\n  }\n\n  void main() {\n    gl_FragColor = color() * vec4(lights() * shadow(), 1.0);\n  }\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        }
      }
    ],
    "directives": []
  },
  "comments": [
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 76,
      "end": 94,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 314,
      "end": 332,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
      "start": 4939,
      "end": 5058,
      "loc": {
        "start": {
          "line": 188,
          "column": 0
        },
        "end": {
          "line": 188,
          "column": 119
        }
      }
    }
  ],
  "tokens": [
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "*",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": 10,
        "updateContext": null
      },
      "value": "*",
      "start": 7,
      "end": 8,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "as",
      "start": 9,
      "end": 11,
      "loc": {
        "start": {
          "line": 1,
          "column": 9
        },
        "end": {
          "line": 1,
          "column": 11
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "THREE",
      "start": 12,
      "end": 17,
      "loc": {
        "start": {
          "line": 1,
          "column": 12
        },
        "end": {
          "line": 1,
          "column": 17
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 18,
      "end": 22,
      "loc": {
        "start": {
          "line": 1,
          "column": 18
        },
        "end": {
          "line": 1,
          "column": 22
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "three",
      "start": 23,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 23
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 30,
      "end": 31,
      "loc": {
        "start": {
          "line": 1,
          "column": 30
        },
        "end": {
          "line": 1,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "import",
        "keyword": "import",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "import",
      "start": 33,
      "end": 39,
      "loc": {
        "start": {
          "line": 3,
          "column": 0
        },
        "end": {
          "line": 3,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 40,
      "end": 41,
      "loc": {
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 3,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 42,
      "end": 56,
      "loc": {
        "start": {
          "line": 3,
          "column": 9
        },
        "end": {
          "line": 3,
          "column": 23
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 57,
      "end": 58,
      "loc": {
        "start": {
          "line": 3,
          "column": 24
        },
        "end": {
          "line": 3,
          "column": 25
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "from",
      "start": 59,
      "end": 63,
      "loc": {
        "start": {
          "line": 3,
          "column": 26
        },
        "end": {
          "line": 3,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "string",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "./Scale",
      "start": 64,
      "end": 73,
      "loc": {
        "start": {
          "line": 3,
          "column": 31
        },
        "end": {
          "line": 3,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 73,
      "end": 74,
      "loc": {
        "start": {
          "line": 3,
          "column": 40
        },
        "end": {
          "line": 3,
          "column": 41
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 76,
      "end": 94,
      "loc": {
        "start": {
          "line": 5,
          "column": 0
        },
        "end": {
          "line": 7,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 95,
      "end": 101,
      "loc": {
        "start": {
          "line": 8,
          "column": 0
        },
        "end": {
          "line": 8,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 102,
      "end": 110,
      "loc": {
        "start": {
          "line": 8,
          "column": 7
        },
        "end": {
          "line": 8,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getOrbitShaderFragment",
      "start": 111,
      "end": 133,
      "loc": {
        "start": {
          "line": 8,
          "column": 16
        },
        "end": {
          "line": 8,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 133,
      "end": 134,
      "loc": {
        "start": {
          "line": 8,
          "column": 38
        },
        "end": {
          "line": 8,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 134,
      "end": 135,
      "loc": {
        "start": {
          "line": 8,
          "column": 39
        },
        "end": {
          "line": 8,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 136,
      "end": 137,
      "loc": {
        "start": {
          "line": 8,
          "column": 41
        },
        "end": {
          "line": 8,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 140,
      "end": 146,
      "loc": {
        "start": {
          "line": 9,
          "column": 2
        },
        "end": {
          "line": 9,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 147,
      "end": 148,
      "loc": {
        "start": {
          "line": 9,
          "column": 9
        },
        "end": {
          "line": 9,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    varying vec3 vColor;\n    uniform sampler2D texture;\n\n    void main() {\n      gl_FragColor = vec4(vColor, 1.0) * texture2D(texture, gl_PointCoord);\n    }\n  ",
      "start": 148,
      "end": 308,
      "loc": {
        "start": {
          "line": 9,
          "column": 10
        },
        "end": {
          "line": 16,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 308,
      "end": 309,
      "loc": {
        "start": {
          "line": 16,
          "column": 2
        },
        "end": {
          "line": 16,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 309,
      "end": 310,
      "loc": {
        "start": {
          "line": 16,
          "column": 3
        },
        "end": {
          "line": 16,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 311,
      "end": 312,
      "loc": {
        "start": {
          "line": 17,
          "column": 0
        },
        "end": {
          "line": 17,
          "column": 1
        }
      }
    },
    {
      "type": "CommentBlock",
      "value": "*\n * @ignore\n ",
      "start": 314,
      "end": 332,
      "loc": {
        "start": {
          "line": 19,
          "column": 0
        },
        "end": {
          "line": 21,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 333,
      "end": 339,
      "loc": {
        "start": {
          "line": 22,
          "column": 0
        },
        "end": {
          "line": 22,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "function",
        "keyword": "function",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "function",
      "start": 340,
      "end": 348,
      "loc": {
        "start": {
          "line": 22,
          "column": 7
        },
        "end": {
          "line": 22,
          "column": 15
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getOrbitShaderVertex",
      "start": 349,
      "end": 369,
      "loc": {
        "start": {
          "line": 22,
          "column": 16
        },
        "end": {
          "line": 22,
          "column": 36
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 369,
      "end": 370,
      "loc": {
        "start": {
          "line": 22,
          "column": 36
        },
        "end": {
          "line": 22,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 370,
      "end": 371,
      "loc": {
        "start": {
          "line": 22,
          "column": 37
        },
        "end": {
          "line": 22,
          "column": 38
        }
      }
    },
    {
      "type": {
        "label": "{",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 372,
      "end": 373,
      "loc": {
        "start": {
          "line": 22,
          "column": 39
        },
        "end": {
          "line": 22,
          "column": 40
        }
      }
    },
    {
      "type": {
        "label": "return",
        "keyword": "return",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "return",
      "start": 376,
      "end": 382,
      "loc": {
        "start": {
          "line": 23,
          "column": 2
        },
        "end": {
          "line": 23,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 383,
      "end": 384,
      "loc": {
        "start": {
          "line": 23,
          "column": 9
        },
        "end": {
          "line": 23,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute vec3 fuzzColor;\n    attribute vec3 origin;\n    varying vec3 vColor;\n\n    attribute float size;\n\n    attribute float a;\n    attribute float e;\n    attribute float i;\n    attribute float om;\n    attribute float w;\n    attribute float wBar;\n    attribute float M;\n\n    vec3 getAstroPos() {\n      float i_rad = i;\n      float o_rad = om;\n      float p_rad = wBar;\n\n      float adjusted_e = e;\n      if (e >= 1.0) {\n        adjusted_e = 0.9;\n      }\n\n      // Estimate eccentric and true anom using iterative approximation (this\n      // is normally an intergral).\n      float E0 = M;\n      float E1 = M + adjusted_e * sin(E0);\n      float lastdiff = abs(E1-E0);\n      E0 = E1;\n\n      for ( int i = 0; i < 100; i ++ ) {\n        E1 = M + adjusted_e * sin(E0);\n        lastdiff = abs(E1-E0);\n        E0 = E1;\n        if (lastdiff < 0.0000001) {\n          break;\n        }\n      }\n\n      float E = E0;\n      float v = 2.0 * atan(sqrt((1.0+adjusted_e)/(1.0-adjusted_e)) * tan(E/2.0));\n\n      // Compute radius vector.\n      float r = ",
      "start": 384,
      "end": 1424,
      "loc": {
        "start": {
          "line": 23,
          "column": 10
        },
        "end": {
          "line": 68,
          "column": 16
        }
      }
    },
    {
      "type": {
        "label": "${",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1424,
      "end": 1426,
      "loc": {
        "start": {
          "line": 68,
          "column": 16
        },
        "end": {
          "line": 68,
          "column": 18
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "getScaleFactor",
      "start": 1426,
      "end": 1440,
      "loc": {
        "start": {
          "line": 68,
          "column": 18
        },
        "end": {
          "line": 68,
          "column": 32
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1440,
      "end": 1441,
      "loc": {
        "start": {
          "line": 68,
          "column": 32
        },
        "end": {
          "line": 68,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1441,
      "end": 1442,
      "loc": {
        "start": {
          "line": 68,
          "column": 33
        },
        "end": {
          "line": 68,
          "column": 34
        }
      }
    },
    {
      "type": {
        "label": ".",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1442,
      "end": 1443,
      "loc": {
        "start": {
          "line": 68,
          "column": 34
        },
        "end": {
          "line": 68,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "toFixed",
      "start": 1443,
      "end": 1450,
      "loc": {
        "start": {
          "line": 68,
          "column": 35
        },
        "end": {
          "line": 68,
          "column": 42
        }
      }
    },
    {
      "type": {
        "label": "(",
        "beforeExpr": true,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1450,
      "end": 1451,
      "loc": {
        "start": {
          "line": 68,
          "column": 42
        },
        "end": {
          "line": 68,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "num",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": 1,
      "start": 1460,
      "end": 1461,
      "loc": {
        "start": {
          "line": 69,
          "column": 8
        },
        "end": {
          "line": 69,
          "column": 9
        }
      }
    },
    {
      "type": {
        "label": ",",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 1461,
      "end": 1462,
      "loc": {
        "start": {
          "line": 69,
          "column": 9
        },
        "end": {
          "line": 69,
          "column": 10
        }
      }
    },
    {
      "type": {
        "label": ")",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1469,
      "end": 1470,
      "loc": {
        "start": {
          "line": 70,
          "column": 6
        },
        "end": {
          "line": 70,
          "column": 7
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 1470,
      "end": 1471,
      "loc": {
        "start": {
          "line": 70,
          "column": 7
        },
        "end": {
          "line": 70,
          "column": 8
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": " * a * (1.0 - adjusted_e*adjusted_e) / (1.0 + adjusted_e * cos(v));\n\n      // Compute heliocentric coords.\n      float X = r * (cos(o_rad) * cos(v + p_rad - o_rad) - sin(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Y = r * (sin(o_rad) * cos(v + p_rad - o_rad) + cos(o_rad) * sin(v + p_rad - o_rad) * cos(i_rad));\n      float Z = r * (sin(v + p_rad - o_rad) * sin(i_rad));\n      return vec3(X, Y, Z);\n    }\n\n    /*\n    vec3 getAstroPosFast() {\n      float M1 = ma + (jd - epoch) * n;\n      float theta = M1 + 2. * e * sin(M1);\n\n      float cosT = cos(theta);\n\n      float r = a * (1. - e * e) / (1. + e * cosT);\n      float v0 = r * cosT;\n      float v1 = r * sin(theta);\n\n      float sinOm = sin(om);\n      float cosOm = cos(om);\n      float sinW = sin(w);\n      float cosW = cos(w);\n      float sinI = sin(i);\n      float cosI = cos(i);\n\n      float X = v0 * (cosOm * cosW - sinOm * sinW * cosI) + v1 * (-1. * cosOm * sinW - sinOm * cosW * cosI);\n      float Y = v0 * (sinOm * cosW + cosOm * sinW * cosI) + v1 * (-1. * sinOm * sinW + cosOm * cosW * cosI);\n      float Z = v0 * (sinW * sinI) + v1 * (cosW * sinI);\n\n      return vec3(X, Y, Z);\n    }\n    */\n\n    void main() {\n      vColor = fuzzColor;\n\n      //vec3 newpos = getAstroPosFast() + origin;\n      vec3 newpos = getAstroPos() + origin;\n      vec4 mvPosition = modelViewMatrix * vec4(newpos, 1.0);\n      gl_Position = projectionMatrix * mvPosition;\n      gl_PointSize = size;\n    }\n  ",
      "start": 1471,
      "end": 2928,
      "loc": {
        "start": {
          "line": 70,
          "column": 8
        },
        "end": {
          "line": 114,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2928,
      "end": 2929,
      "loc": {
        "start": {
          "line": 114,
          "column": 2
        },
        "end": {
          "line": 114,
          "column": 3
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 2929,
      "end": 2930,
      "loc": {
        "start": {
          "line": 114,
          "column": 3
        },
        "end": {
          "line": 114,
          "column": 4
        }
      }
    },
    {
      "type": {
        "label": "}",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2931,
      "end": 2932,
      "loc": {
        "start": {
          "line": 115,
          "column": 0
        },
        "end": {
          "line": 115,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 2934,
      "end": 2940,
      "loc": {
        "start": {
          "line": 117,
          "column": 0
        },
        "end": {
          "line": 117,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 2941,
      "end": 2946,
      "loc": {
        "start": {
          "line": 117,
          "column": 7
        },
        "end": {
          "line": 117,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STAR_SHADER_FRAGMENT",
      "start": 2947,
      "end": 2967,
      "loc": {
        "start": {
          "line": 117,
          "column": 13
        },
        "end": {
          "line": 117,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 2968,
      "end": 2969,
      "loc": {
        "start": {
          "line": 117,
          "column": 34
        },
        "end": {
          "line": 117,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 2970,
      "end": 2971,
      "loc": {
        "start": {
          "line": 117,
          "column": 36
        },
        "end": {
          "line": 117,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    varying vec3 vColor;\n\n    void main() {\n      float a = 1.0 - 2.0 * length(gl_PointCoord - vec2(0.5, 0.5));\n      gl_FragColor = vec4(vColor, a);\n    }\n",
      "start": 2971,
      "end": 3128,
      "loc": {
        "start": {
          "line": 117,
          "column": 37
        },
        "end": {
          "line": 124,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3128,
      "end": 3129,
      "loc": {
        "start": {
          "line": 124,
          "column": 0
        },
        "end": {
          "line": 124,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3129,
      "end": 3130,
      "loc": {
        "start": {
          "line": 124,
          "column": 1
        },
        "end": {
          "line": 124,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3132,
      "end": 3138,
      "loc": {
        "start": {
          "line": 126,
          "column": 0
        },
        "end": {
          "line": 126,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3139,
      "end": 3144,
      "loc": {
        "start": {
          "line": 126,
          "column": 7
        },
        "end": {
          "line": 126,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "STAR_SHADER_VERTEX",
      "start": 3145,
      "end": 3163,
      "loc": {
        "start": {
          "line": 126,
          "column": 13
        },
        "end": {
          "line": 126,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3164,
      "end": 3165,
      "loc": {
        "start": {
          "line": 126,
          "column": 32
        },
        "end": {
          "line": 126,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3166,
      "end": 3167,
      "loc": {
        "start": {
          "line": 126,
          "column": 34
        },
        "end": {
          "line": 126,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute float size;\n    varying vec3 vColor;\n\n    void main() {\n        vColor = color;\n        vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n        gl_PointSize = size;\n        gl_Position = projectionMatrix * mvPosition;\n    }\n",
      "start": 3167,
      "end": 3415,
      "loc": {
        "start": {
          "line": 126,
          "column": 35
        },
        "end": {
          "line": 136,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3415,
      "end": 3416,
      "loc": {
        "start": {
          "line": 136,
          "column": 0
        },
        "end": {
          "line": 136,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3416,
      "end": 3417,
      "loc": {
        "start": {
          "line": 136,
          "column": 1
        },
        "end": {
          "line": 136,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3419,
      "end": 3425,
      "loc": {
        "start": {
          "line": 138,
          "column": 0
        },
        "end": {
          "line": 138,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3426,
      "end": 3431,
      "loc": {
        "start": {
          "line": 138,
          "column": 7
        },
        "end": {
          "line": 138,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "GENERIC_PARTICLE_SHADER_VERTEX",
      "start": 3432,
      "end": 3462,
      "loc": {
        "start": {
          "line": 138,
          "column": 13
        },
        "end": {
          "line": 138,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3463,
      "end": 3464,
      "loc": {
        "start": {
          "line": 138,
          "column": 44
        },
        "end": {
          "line": 138,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3465,
      "end": 3466,
      "loc": {
        "start": {
          "line": 138,
          "column": 46
        },
        "end": {
          "line": 138,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    attribute float size;\n    attribute vec3 customColor;\n    varying vec3 vColor;\n    void main() {\n      vColor = customColor;\n      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n      gl_PointSize = size * (300.0 / -mvPosition.z);\n      gl_Position = projectionMatrix * mvPosition;\n    }\n",
      "start": 3466,
      "end": 3769,
      "loc": {
        "start": {
          "line": 138,
          "column": 47
        },
        "end": {
          "line": 148,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3769,
      "end": 3770,
      "loc": {
        "start": {
          "line": 148,
          "column": 0
        },
        "end": {
          "line": 148,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 3770,
      "end": 3771,
      "loc": {
        "start": {
          "line": 148,
          "column": 1
        },
        "end": {
          "line": 148,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 3773,
      "end": 3779,
      "loc": {
        "start": {
          "line": 150,
          "column": 0
        },
        "end": {
          "line": 150,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 3780,
      "end": 3785,
      "loc": {
        "start": {
          "line": 150,
          "column": 7
        },
        "end": {
          "line": 150,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "GENERIC_PARTICLE_SHADER_FRAGMENT",
      "start": 3786,
      "end": 3818,
      "loc": {
        "start": {
          "line": 150,
          "column": 13
        },
        "end": {
          "line": 150,
          "column": 45
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 3819,
      "end": 3820,
      "loc": {
        "start": {
          "line": 150,
          "column": 46
        },
        "end": {
          "line": 150,
          "column": 47
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 3821,
      "end": 3822,
      "loc": {
        "start": {
          "line": 150,
          "column": 48
        },
        "end": {
          "line": 150,
          "column": 49
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n    uniform vec3 color;\n    uniform sampler2D texture;\n    varying vec3 vColor;\n    void main() {\n      gl_FragColor = vec4(color * vColor, 1.0);\n      gl_FragColor = gl_FragColor * texture2D(texture, gl_PointCoord);\n      if (gl_FragColor.a < ALPHATEST) discard;\n    }\n",
      "start": 3822,
      "end": 4093,
      "loc": {
        "start": {
          "line": 150,
          "column": 49
        },
        "end": {
          "line": 159,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4093,
      "end": 4094,
      "loc": {
        "start": {
          "line": 159,
          "column": 0
        },
        "end": {
          "line": 159,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4094,
      "end": 4095,
      "loc": {
        "start": {
          "line": 159,
          "column": 1
        },
        "end": {
          "line": 159,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 4097,
      "end": 4103,
      "loc": {
        "start": {
          "line": 161,
          "column": 0
        },
        "end": {
          "line": 161,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 4104,
      "end": 4109,
      "loc": {
        "start": {
          "line": 161,
          "column": 7
        },
        "end": {
          "line": 161,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ATMOSPHERE_SHADER_VERTEX",
      "start": 4110,
      "end": 4134,
      "loc": {
        "start": {
          "line": 161,
          "column": 13
        },
        "end": {
          "line": 161,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 4135,
      "end": 4136,
      "loc": {
        "start": {
          "line": 161,
          "column": 38
        },
        "end": {
          "line": 161,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4137,
      "end": 4138,
      "loc": {
        "start": {
          "line": 161,
          "column": 40
        },
        "end": {
          "line": 161,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  //varying vec3 vNormal;\n\n  varying vec3 vViewLightPos;\n\n  void main() {\n    //vNormal = normalize(normalMatrix * normal);\n    //gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n    vUv = uv;\n    // Since the light is in camera coordinates,\n    // I'll need the vertex position in camera coords too\n    vecPos = (modelViewMatrix * vec4(position, 1.0)).xyz;\n    // That's NOT exacly how you should transform your\n    // normals but this will work fine, since my model\n    // matrix is pretty basic\n    vecNormal = (modelViewMatrix * vec4(normal, 0.0)).xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    gl_Position = projectionMatrix * vec4(vecPos, 1.0);\n  }\n",
      "start": 4138,
      "end": 4935,
      "loc": {
        "start": {
          "line": 161,
          "column": 41
        },
        "end": {
          "line": 186,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 4935,
      "end": 4936,
      "loc": {
        "start": {
          "line": 186,
          "column": 0
        },
        "end": {
          "line": 186,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 4936,
      "end": 4937,
      "loc": {
        "start": {
          "line": 186,
          "column": 1
        },
        "end": {
          "line": 186,
          "column": 2
        }
      }
    },
    {
      "type": "CommentLine",
      "value": " With help from https://stackoverflow.com/questions/43621274/how-to-correctly-set-lighting-for-custom-shader-material",
      "start": 4939,
      "end": 5058,
      "loc": {
        "start": {
          "line": 188,
          "column": 0
        },
        "end": {
          "line": 188,
          "column": 119
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5059,
      "end": 5065,
      "loc": {
        "start": {
          "line": 189,
          "column": 0
        },
        "end": {
          "line": 189,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5066,
      "end": 5071,
      "loc": {
        "start": {
          "line": 189,
          "column": 7
        },
        "end": {
          "line": 189,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "ATMOSPHERE_SHADER_FRAGMENT",
      "start": 5072,
      "end": 5098,
      "loc": {
        "start": {
          "line": 189,
          "column": 13
        },
        "end": {
          "line": 189,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5099,
      "end": 5100,
      "loc": {
        "start": {
          "line": 189,
          "column": 40
        },
        "end": {
          "line": 189,
          "column": 41
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5101,
      "end": 5102,
      "loc": {
        "start": {
          "line": 189,
          "column": 42
        },
        "end": {
          "line": 189,
          "column": 43
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform float c;\n  uniform float p;\n  uniform vec3 color;\n\n  varying vec2 vUv;\n  varying vec3 vecPos;\n  varying vec3 vecNormal;\n  varying vec3  vViewLightPos;\n\n  void main() {\n    float intensity = pow(c - dot(vecNormal, vec3(0.0, 0.0, 1.0)), p);\n\n    vec4 addedLights = vec4(0.0, 0.0, 0.0, 1.0);\n    vec3 lightDirection = normalize(vecPos - vViewLightPos);\n    addedLights.rgb += clamp(dot(-lightDirection, vecNormal), 0.0, 1.0)\n                       * 1.0 /* intensity */;\n                       // * pointLights[i].color\n\n    gl_FragColor = vec4(color, 1.0) * intensity * addedLights;\n  }\n",
      "start": 5102,
      "end": 5698,
      "loc": {
        "start": {
          "line": 189,
          "column": 43
        },
        "end": {
          "line": 210,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5698,
      "end": 5699,
      "loc": {
        "start": {
          "line": 210,
          "column": 0
        },
        "end": {
          "line": 210,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 5699,
      "end": 5700,
      "loc": {
        "start": {
          "line": 210,
          "column": 1
        },
        "end": {
          "line": 210,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 5702,
      "end": 5708,
      "loc": {
        "start": {
          "line": 212,
          "column": 0
        },
        "end": {
          "line": 212,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 5709,
      "end": 5714,
      "loc": {
        "start": {
          "line": 212,
          "column": 7
        },
        "end": {
          "line": 212,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SPHERE_SHADER_VERTEX",
      "start": 5715,
      "end": 5735,
      "loc": {
        "start": {
          "line": 212,
          "column": 13
        },
        "end": {
          "line": 212,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 5736,
      "end": 5737,
      "loc": {
        "start": {
          "line": 212,
          "column": 34
        },
        "end": {
          "line": 212,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 5738,
      "end": 5739,
      "loc": {
        "start": {
          "line": 212,
          "column": 36
        },
        "end": {
          "line": 212,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform vec3 lightPos;\n\n  varying vec2 vUv;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n  varying vec3 vNormal;\n\n  void main() {\n    vUv = uv;\n    vec4 vViewPosition4 = modelViewMatrix * vec4(position, 1.0);\n    vViewPosition = vViewPosition4.xyz;\n    vViewLightPos = (viewMatrix * vec4(lightPos, 1.0)).xyz;\n    vNormal = normalMatrix * normal;\n\n    gl_Position = projectionMatrix * vViewPosition4;\n  }\n",
      "start": 5739,
      "end": 6161,
      "loc": {
        "start": {
          "line": 212,
          "column": 37
        },
        "end": {
          "line": 229,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6161,
      "end": 6162,
      "loc": {
        "start": {
          "line": 229,
          "column": 0
        },
        "end": {
          "line": 229,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6162,
      "end": 6163,
      "loc": {
        "start": {
          "line": 229,
          "column": 1
        },
        "end": {
          "line": 229,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6165,
      "end": 6171,
      "loc": {
        "start": {
          "line": 231,
          "column": 0
        },
        "end": {
          "line": 231,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 6172,
      "end": 6177,
      "loc": {
        "start": {
          "line": 231,
          "column": 7
        },
        "end": {
          "line": 231,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "SPHERE_SHADER_FRAGMENT",
      "start": 6178,
      "end": 6200,
      "loc": {
        "start": {
          "line": 231,
          "column": 13
        },
        "end": {
          "line": 231,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 6201,
      "end": 6202,
      "loc": {
        "start": {
          "line": 231,
          "column": 36
        },
        "end": {
          "line": 231,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6203,
      "end": 6204,
      "loc": {
        "start": {
          "line": 231,
          "column": 38
        },
        "end": {
          "line": 231,
          "column": 39
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform sampler2D sphereTexture;\n\n  varying vec2 vUv;\n  varying vec3 vNormal;\n  varying vec3 vViewPosition;\n  varying vec3 vViewLightPos;\n\n  void main() {\n    vec3 normal = normalize(vNormal);\n    vec3 lightDir = normalize(vViewLightPos - vViewPosition);\n    float lambertian = max(dot(normal, lightDir), 0.0);\n    gl_FragColor = texture2D(sphereTexture, vUv) * vec4(vec3(1.0) * lambertian, 1.0);\n  }\n",
      "start": 6204,
      "end": 6608,
      "loc": {
        "start": {
          "line": 231,
          "column": 39
        },
        "end": {
          "line": 245,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6608,
      "end": 6609,
      "loc": {
        "start": {
          "line": 245,
          "column": 0
        },
        "end": {
          "line": 245,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6609,
      "end": 6610,
      "loc": {
        "start": {
          "line": 245,
          "column": 1
        },
        "end": {
          "line": 245,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6612,
      "end": 6618,
      "loc": {
        "start": {
          "line": 247,
          "column": 0
        },
        "end": {
          "line": 247,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 6619,
      "end": 6624,
      "loc": {
        "start": {
          "line": 247,
          "column": 7
        },
        "end": {
          "line": 247,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "RING_SHADER_VERTEX",
      "start": 6625,
      "end": 6643,
      "loc": {
        "start": {
          "line": 247,
          "column": 13
        },
        "end": {
          "line": 247,
          "column": 31
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 6644,
      "end": 6645,
      "loc": {
        "start": {
          "line": 247,
          "column": 32
        },
        "end": {
          "line": 247,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6646,
      "end": 6647,
      "loc": {
        "start": {
          "line": 247,
          "column": 34
        },
        "end": {
          "line": 247,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n  varying vec3 vNormal;\n\n  void main() {\n    vPos = position;\n    vec4 worldPosition = (modelMatrix * vec4(position, 1.));\n    gl_Position = projectionMatrix * viewMatrix * vec4(worldPosition.xyz, 1.);\n\n    vNormal = normalMatrix * normal;\n    vWorldPosition = worldPosition.xyz;\n  }\n",
      "start": 6647,
      "end": 6984,
      "loc": {
        "start": {
          "line": 247,
          "column": 35
        },
        "end": {
          "line": 260,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 6984,
      "end": 6985,
      "loc": {
        "start": {
          "line": 260,
          "column": 0
        },
        "end": {
          "line": 260,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 6985,
      "end": 6986,
      "loc": {
        "start": {
          "line": 260,
          "column": 1
        },
        "end": {
          "line": 260,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 6988,
      "end": 6994,
      "loc": {
        "start": {
          "line": 262,
          "column": 0
        },
        "end": {
          "line": 262,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 6995,
      "end": 7000,
      "loc": {
        "start": {
          "line": 262,
          "column": 7
        },
        "end": {
          "line": 262,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "RING_SHADER_FRAGMENT",
      "start": 7001,
      "end": 7021,
      "loc": {
        "start": {
          "line": 262,
          "column": 13
        },
        "end": {
          "line": 262,
          "column": 33
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 7022,
      "end": 7023,
      "loc": {
        "start": {
          "line": 262,
          "column": 34
        },
        "end": {
          "line": 262,
          "column": 35
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 7024,
      "end": 7025,
      "loc": {
        "start": {
          "line": 262,
          "column": 36
        },
        "end": {
          "line": 262,
          "column": 37
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n  uniform sampler2D ringTexture;\n  uniform float innerRadius;\n  uniform float outerRadius;\n  uniform vec3 lightPos;\n\n  varying vec3 vNormal;\n  varying vec3 vPos;\n  varying vec3 vWorldPosition;\n\n  vec4 color() {\n    vec2 uv = vec2(0);\n    uv.x = (length(vPos) - innerRadius) / (outerRadius - innerRadius);\n    if (uv.x < 0.0 || uv.x > 1.0) {\n      discard;\n    }\n\n    vec4 pixel = texture2D(ringTexture, uv);\n    return pixel;\n  }\n\n  vec3 shadow() {\n    // TODO(ian): planet and sun position uniforms\n    // sun position in saturn test\n\n    vec3 lightDir = normalize(vPos - lightPos);\n    vec3 planetPos = vec3(0);\n\n    vec3 ringPos = vPos - planetPos;\n    float posDotLightDir = dot(ringPos, lightDir);\n    float posDotLightDir2 = posDotLightDir * posDotLightDir;\n    float radius = 0.0389259903; // radius of saturn in coordinate system\n    float radius2 = radius * radius;\n    if (posDotLightDir > 0.0 && dot(ringPos, ringPos) - posDotLightDir2 < radius2) {\n      return vec3(0.0);\n    }\n    return vec3(1.0);\n  }\n\n  vec3 lights() {\n    vec3 lightDirection = normalize(vWorldPosition - lightPos);\n    float c = 0.35 + max(0.0, dot(vNormal, lightDirection)) * 0.4;\n\n    return vec3(c);\n  }\n\n  void main() {\n    gl_FragColor = color() * vec4(lights() * shadow(), 1.0);\n  }\n",
      "start": 7025,
      "end": 8299,
      "loc": {
        "start": {
          "line": 262,
          "column": 37
        },
        "end": {
          "line": 311,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 8299,
      "end": 8300,
      "loc": {
        "start": {
          "line": 311,
          "column": 0
        },
        "end": {
          "line": 311,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8300,
      "end": 8301,
      "loc": {
        "start": {
          "line": 311,
          "column": 1
        },
        "end": {
          "line": 311,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 8302,
      "end": 8302,
      "loc": {
        "start": {
          "line": 312,
          "column": 0
        },
        "end": {
          "line": 312,
          "column": 0
        }
      }
    }
  ]
}